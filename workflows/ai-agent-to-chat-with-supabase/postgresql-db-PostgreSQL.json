{
  "createdAt": "2025-06-04T19:35:51.712Z",
  "updatedAt": "2025-06-05T07:59:09.000Z",
  "id": "CuYX8j1q3PiQRwTA",
  "name": "AI Agent to chat with Supabase/PostgreSQL DB",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "content": "**Replace password and username for Supabase**",
        "height": 80,
        "width": 215,
        "color": 3
      },
      "id": "69814e23-c275-4eba-97a1-7581bf3b265b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        900,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Set up steps\n\n#### Preparation\n1. **Create Accounts**:\n   - [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a): For workflow automation.\n   - [Supabase](https://supabase.com/): For database hosting and management.\n   - [OpenAI](https://openai.com/): For building the conversational AI agent.\n2. **Configure Database Connection**:\n   - Set up a PostgreSQL database in Supabase.\n   - Use appropriate credentials (`username`, `password`, `host`, and `database` name) in your workflow.\n\n#### N8N Workflow\n\nAI agent with tools:\n\n1. **Code Tool**:\n   - Execute SQL queries based on user input.\n2. **Database Schema Tool**:\n   - Retrieve a list of all tables in the database.\n   - Use a predefined SQL query to fetch table definitions, including column names, types, and references.\n3. **Table Definition**:\n   - Retrieve a list of columns with types for one table.",
        "height": 545.9087885077763,
        "width": 280.2462120317618,
        "color": 7
      },
      "id": "6080b045-3830-4e29-a7b5-59491fdd62c4",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\n## AI Agent to chat with Supabase/PostgreSQL DB\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\n\nAccessing and analyzing database data often requires SQL expertise or dedicated reports, which can be time-consuming. This workflow empowers users to interact with a database conversationally through an AI-powered agent. It dynamically generates SQL queries based on user requests, streamlining data retrieval and analysis.\n\nThis workflow integrates OpenAI with a Supabase database, enabling users to interact with their data via an AI agent. The agent can:\n- Retrieve records from the database.\n- Extract and analyze JSON data stored in tables.\n- Provide summaries, aggregations, or specific data points based on user queries.\n\n",
        "height": 497.1532689930921,
        "width": 636.2128494576581,
        "color": 7
      },
      "id": "f681271c-fed5-4f9c-965d-aca069c9853e",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### ... or watch set up video [20 min]\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png)](https://www.youtube.com/watch?v=-GgKzhCNxjk)\n",
        "height": 239.5888196628349,
        "width": 330.5152611046425,
        "color": 7
      },
      "id": "8e004394-739c-4435-869f-5c06d32351ff",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c74afbb3-3158-4218-ad26-200283456141",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        480,
        380
      ],
      "webhookId": "6e95bc27-99a6-417c-8bf7-2831d7f7a4be",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "48a121ff-a050-4c8a-9b68-6e3777b335db",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        540,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get list of all tables in database",
        "operation": "executeQuery",
        "query": "SELECT table_schema, table_name\nFROM information_schema.tables\nWHERE table_type = 'BASE TABLE' AND table_schema = 'public';",
        "options": {}
      },
      "id": "f2cb2f84-49e5-41fa-81e5-54c616c3bf9a",
      "name": "DB Schema",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        940,
        640
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get table definition to find all columns and types.",
        "operation": "executeQuery",
        "query": "SELECT \n    c.column_name,\n    c.data_type,\n    c.is_nullable,\n    c.column_default,\n    tc.constraint_type,\n    ccu.table_name AS referenced_table,\n    ccu.column_name AS referenced_column\nFROM \n    information_schema.columns c\nLEFT JOIN \n    information_schema.key_column_usage kcu \n    ON c.table_name = kcu.table_name \n    AND c.column_name = kcu.column_name\nLEFT JOIN \n    information_schema.table_constraints tc \n    ON kcu.constraint_name = tc.constraint_name\n    AND tc.constraint_type = 'FOREIGN KEY'\nLEFT JOIN\n    information_schema.constraint_column_usage ccu\n    ON tc.constraint_name = ccu.constraint_name\nWHERE \n    c.table_name = '{{ $fromAI(\"table_name\") }}' -- Your table name\n    AND c.table_schema = 'public' -- Ensure it's in the right schema\nORDER BY \n    c.ordinal_position;\n",
        "options": {}
      },
      "id": "41c4c4f9-4aa9-46f6-93e0-93dd8e19af6a",
      "name": "Get table definition",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        1100,
        640
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "content": "**Finetune the prompt of assistant**",
        "height": 80,
        "width": 215
      },
      "id": "ad4bc19d-fcdf-42bf-b5aa-5bebf48fa167",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "agent": "openAiFunctionsAgent",
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are DB assistant. You need to run queries in DB aligned with user requests.\n\nRun custom SQL query to aggregate data and response to user.\n\nFetch all data to analyse it for response if needed.\n"
        }
      },
      "id": "642db20d-b69e-4e88-a994-6a96b8026175",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        700,
        380
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Run custom SQL queries using knowledge about Output structure to provide needed response for user request.\nUse ->> operator to extract JSON data.",
        "operation": "executeQuery",
        "query": "{{ $fromAI(\"query\",\"SQL query for PostgreSQL DB in Supabase\") }}",
        "options": {}
      },
      "id": "a084393d-df75-4f05-9ede-823f8714c19a",
      "name": "Run SQL Query",
      "type": "n8n-nodes-base.postgresTool",
      "position": [
        800,
        640
      ],
      "typeVersion": 2.5
    },
    {
      "parameters": {
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1060,
        380
      ],
      "id": "224c5547-144f-45a3-a369-e1d6fc559e8c",
      "name": "Slack",
      "webhookId": "b3ea4025-f7f4-4916-930b-3057758a068d"
    }
  ],
  "connections": {
    "DB Schema": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Run SQL Query": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get table definition": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "45e07c41-4b5f-4bad-a350-eaf121ecfa52",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-06-04T19:36:07.301Z",
      "updatedAt": "2025-06-04T19:36:07.301Z",
      "id": "9gsxEd4dHejQ0zGC",
      "name": "PostgreSQL"
    },
    {
      "createdAt": "2025-06-04T19:36:00.009Z",
      "updatedAt": "2025-06-04T19:36:00.009Z",
      "id": "T8ysJDV0T1xCiAvL",
      "name": "Supabase"
    }
  ]
}